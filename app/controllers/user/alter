class RoomController < ApplicationController
	def new
            puts params.inspect
            @user = current_user
            puts params[:id]
            p current_user.id
            @conversation = Conversation.where(user_id: current_user.id, friend_id: params[:id]).first
            if !@conversation.present?
                  @conversation = Conversation.where(user_id:params[:id], friend_id: current_user.id).first
            end
            if @conversation.nil?
                  @conversation = Conversation.find(params[:conversation_id])
            end
            puts @conversation.inspect
            @friend = User.find(params[:id])
             if !@friend.present? 
                  @friend = current_user
            end

            @messages = @conversation.messages
            if !@messages.empty?
               @messager = @messages.last.conversation_id
         end
            @message = Message.new
      end
      def create
         puts params.inspect
         @message = Message.new
         @message.content = params[:message][:text]
         @message.user_id = current_user.id
         puts params[:message][:friend_id] 
         @conversation = Conversation.find(params[:message][:conversation_id])
            p @conversation.inspect
            if params[:message][:friend_id] == "undefined"
                   @friend = User.find(@conversation.friend_id)
                   else
                   @friend = User.find(params[:message][:friend_id])
            end
         p @friend.inspect
         @message.conversation_id = @conversation.id
         respond_to do |format|
         if @message.save
            puts "hello"
            ActionCable.server.broadcast "conversation_channel_#{current_user.id}_#{@conversation.id}", {content: @message.content, conversation_id: @conversation.id, message_id: @message.id}
            ActionCable.server.broadcast "conversation_channel_#{@friend.id}_#{@conversation.id}", {content: @message.content, conversation_id: @conversation.id, message_id: @message.id} 
            p "streaming completed"
           format.html { redirect_to message_path(id: @friend.id, conversation_id: @conversation.id,message_id: @message.id), notice: 'Chat was successfully created.' }
           format.json { render :show, status: :created, location: @chat }
           format.js
         else
          format.html { render :new }
          format.json { render json: @chat.errors, status: :unprocessable_entity }
         end
      end
    end
end






 <h1>New Chat</h1>
     <% if @messages.present? %>
      <% @messages.each do |message| %>
       <% if message.conversation_id == @conversation.id %> 
         <% @user = User.find(message.user_id) %>
          <p><%= message.content %>--- send by <%= @user.first_name %></p>
          <% end %>
       <% end %>
      <% end %>
       <div id="new_message"></div>
       <%= render 'message', message: @message, friend: @friend, conversation: @conversation %>
       <%= link_to 'Back', my_friends_path %>